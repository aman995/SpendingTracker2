<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="26" failed="0" total="26" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="33828" started-at="2018-07-02T16:59:52Z" finished-at="2018-07-02T17:00:26Z">
    <groups>
    </groups>
    <test name="Motorola" duration-ms="16297" started-at="2018-07-02T16:59:52Z" finished-at="2018-07-02T17:00:08Z">
      <class name="com.Spending.Sanity.SanityTestcaseRun">
        <test-method status="FAIL" signature="AppiumStarting(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String)[pri:0, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="AppiumStarting" is-config="true" duration-ms="0" started-at="2018-07-02T22:29:52Z" finished-at="2018-07-02T22:29:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Moto G (3rd Generation)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ZY2222RXSV]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[android]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[127.0.0.1:1234/wd/hub]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2345]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[127.0.0.1]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: Device ZY2222RXSV was not in the list of connected devices (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 8.73 seconds
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'AAGRAWA-IN-LE01', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_152'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Device ZY2222RXSV was not in the list of connected devices (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 8.73 seconds
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'AAGRAWA-IN-LE01', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_152'
Driver info: driver.version: AndroidDriver
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53)
	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91)
	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:129)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:209)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:132)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:38)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:84)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:94)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:80)
	at com.Spending.AppiumConfiguration.AppiumManager.AppuimServerStarting(AppiumManager.java:27)
	at com.Spending.Sanity.SanityTestcaseRun.AppiumStarting(SanityTestcaseRun.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.TestRunner.beforeRun(TestRunner.java:656)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppiumStarting -->
        <test-method status="SKIP" signature="PageObjectCreation()[pri:0, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="PageObjectCreation" duration-ms="4" started-at="2018-07-02T22:30:08Z" finished-at="2018-07-02T22:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PageObjectCreation -->
        <test-method status="SKIP" signature="TestCase001()[pri:1, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="TestCase001" duration-ms="4" started-at="2018-07-02T22:30:08Z" finished-at="2018-07-02T22:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase001 -->
        <test-method status="SKIP" signature="testCase002()[pri:2, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="testCase002" duration-ms="0" started-at="2018-07-02T22:30:08Z" finished-at="2018-07-02T22:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase002 -->
        <test-method status="SKIP" signature="testCase003()[pri:3, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="testCase003" duration-ms="4" started-at="2018-07-02T22:30:08Z" finished-at="2018-07-02T22:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase003 -->
        <test-method status="SKIP" signature="testCase004()[pri:4, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="testCase004" duration-ms="0" started-at="2018-07-02T22:30:08Z" finished-at="2018-07-02T22:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase004 -->
        <test-method status="SKIP" signature="testCase005()[pri:5, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="testCase005" duration-ms="4" started-at="2018-07-02T22:30:08Z" finished-at="2018-07-02T22:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase005 -->
        <test-method status="SKIP" signature="testCase007()[pri:7, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="testCase007" duration-ms="0" started-at="2018-07-02T22:30:08Z" finished-at="2018-07-02T22:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase007 -->
        <test-method status="SKIP" signature="testCase006()[pri:6, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="testCase006" duration-ms="0" started-at="2018-07-02T22:30:08Z" finished-at="2018-07-02T22:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase006 -->
        <test-method status="SKIP" signature="testCase009()[pri:9, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="testCase009" duration-ms="0" started-at="2018-07-02T22:30:08Z" finished-at="2018-07-02T22:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase009 -->
        <test-method status="SKIP" signature="testCase008()[pri:8, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="testCase008" duration-ms="0" started-at="2018-07-02T22:30:08Z" finished-at="2018-07-02T22:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase008 -->
        <test-method status="SKIP" signature="testCase010()[pri:10, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="testCase010" duration-ms="0" started-at="2018-07-02T22:30:08Z" finished-at="2018-07-02T22:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase010 -->
        <test-method status="SKIP" signature="testCase011()[pri:11, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="testCase011" duration-ms="0" started-at="2018-07-02T22:30:08Z" finished-at="2018-07-02T22:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase011 -->
        <test-method status="SKIP" signature="testCase012()[pri:12, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="testCase012" duration-ms="7" started-at="2018-07-02T22:30:08Z" finished-at="2018-07-02T22:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase012 -->
        <test-method status="SKIP" signature="AppiumStoping()[pri:0, instance:com.Spending.Sanity.SanityTestcaseRun@7d20d0b]" name="AppiumStoping" is-config="true" duration-ms="0" started-at="2018-07-02T22:30:08Z" finished-at="2018-07-02T22:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppiumStoping -->
      </class> <!-- com.Spending.Sanity.SanityTestcaseRun -->
    </test> <!-- Motorola -->
    <test name="Samsung Galaxy A5" duration-ms="33828" started-at="2018-07-02T16:59:52Z" finished-at="2018-07-02T17:00:26Z">
      <class name="com.Spending.Sanity.SanityTestcaseRun">
        <test-method status="FAIL" signature="AppiumStarting(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String)[pri:0, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="AppiumStarting" is-config="true" duration-ms="0" started-at="2018-07-02T22:29:52Z" finished-at="2018-07-02T22:29:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Galaxy A5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[85cfa63b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[android]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[127.0.0.3:5678/wd/hub]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[5678]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[6789]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[5678]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[127.0.0.3]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 26.32 seconds
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'AAGRAWA-IN-LE01', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_152'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 26.32 seconds
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'AAGRAWA-IN-LE01', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_152'
Driver info: driver.version: AndroidDriver
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53)
	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91)
	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:129)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:209)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:132)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:38)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:84)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:94)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:80)
	at com.Spending.AppiumConfiguration.AppiumManager.AppuimServerStarting(AppiumManager.java:27)
	at com.Spending.Sanity.SanityTestcaseRun.AppiumStarting(SanityTestcaseRun.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.TestRunner.beforeRun(TestRunner.java:656)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppiumStarting -->
        <test-method status="SKIP" signature="TestCase001()[pri:1, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="TestCase001" duration-ms="4" started-at="2018-07-02T22:30:26Z" finished-at="2018-07-02T22:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase001 -->
        <test-method status="SKIP" signature="PageObjectCreation()[pri:0, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="PageObjectCreation" duration-ms="0" started-at="2018-07-02T22:30:26Z" finished-at="2018-07-02T22:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PageObjectCreation -->
        <test-method status="SKIP" signature="testCase002()[pri:2, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="testCase002" duration-ms="4" started-at="2018-07-02T22:30:26Z" finished-at="2018-07-02T22:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase002 -->
        <test-method status="SKIP" signature="testCase003()[pri:3, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="testCase003" duration-ms="0" started-at="2018-07-02T22:30:26Z" finished-at="2018-07-02T22:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase003 -->
        <test-method status="SKIP" signature="testCase005()[pri:5, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="testCase005" duration-ms="4" started-at="2018-07-02T22:30:26Z" finished-at="2018-07-02T22:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase005 -->
        <test-method status="SKIP" signature="testCase004()[pri:4, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="testCase004" duration-ms="0" started-at="2018-07-02T22:30:26Z" finished-at="2018-07-02T22:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase004 -->
        <test-method status="SKIP" signature="testCase006()[pri:6, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="testCase006" duration-ms="4" started-at="2018-07-02T22:30:26Z" finished-at="2018-07-02T22:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase006 -->
        <test-method status="SKIP" signature="testCase007()[pri:7, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="testCase007" duration-ms="4" started-at="2018-07-02T22:30:26Z" finished-at="2018-07-02T22:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase007 -->
        <test-method status="SKIP" signature="testCase008()[pri:8, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="testCase008" duration-ms="4" started-at="2018-07-02T22:30:26Z" finished-at="2018-07-02T22:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase008 -->
        <test-method status="SKIP" signature="testCase009()[pri:9, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="testCase009" duration-ms="0" started-at="2018-07-02T22:30:26Z" finished-at="2018-07-02T22:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase009 -->
        <test-method status="SKIP" signature="testCase010()[pri:10, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="testCase010" duration-ms="4" started-at="2018-07-02T22:30:26Z" finished-at="2018-07-02T22:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase010 -->
        <test-method status="SKIP" signature="testCase011()[pri:11, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="testCase011" duration-ms="0" started-at="2018-07-02T22:30:26Z" finished-at="2018-07-02T22:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase011 -->
        <test-method status="SKIP" signature="testCase012()[pri:12, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="testCase012" duration-ms="4" started-at="2018-07-02T22:30:26Z" finished-at="2018-07-02T22:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase012 -->
        <test-method status="SKIP" signature="AppiumStoping()[pri:0, instance:com.Spending.Sanity.SanityTestcaseRun@4e50c791]" name="AppiumStoping" is-config="true" duration-ms="0" started-at="2018-07-02T22:30:26Z" finished-at="2018-07-02T22:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppiumStoping -->
      </class> <!-- com.Spending.Sanity.SanityTestcaseRun -->
    </test> <!-- Samsung Galaxy A5 -->
  </suite> <!-- Suite -->
</testng-results>
